#!/bin/sh
# postinst script for ripe-atlas-anchor.
#
# See: dh_installdeb(1).

set -e

# summary of how this script can be called:
#       * <postinst> `configure' <most-recently-configured-version>
#       * <old-postinst> `abort-upgrade' <new version>
#       * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#         <new-version>
#       * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#         <failed-install-package> <version> `removing'
#         <conflicting-package> <version>
#
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

service_name='ripe-atlas.service'
atlas_upgradedir='/var/lib/ripe-atlas-upgrade'
atlas_newdir='/etc/ripe-atlas'
atlas_newkey="${atlas_newdir}/probe_key"
atlas_newconfig="${atlas_newdir}/config.txt"
atlas_user='ripe-atlas'
atlas_group='ripe-atlas'

get_state()
{
	if [ -f "${atlas_upgradedir}/$1" ]; then
		return 0
	else
		return 1
	fi
}

init_state()
{
	mkdir -p "${atlas_upgradedir}"
	if systemctl "$1" --quiet "${service_name}" 1>/dev/null 2>&1; then
		touch "${atlas_upgradedir}/$1" 2>/dev/null
	else
		rm -f "${atlas_upgradedir}/$1" 2>/dev/null
	fi
}

clear_state()
{
	rm -rf "${atlas_upgradedir}" 2>/dev/null
}

ensure_newdir_is_present()
{
	if (! [ -d "${atlas_newdir}" ]); then
		mkdir -p "${atlas_newdir}"
		chown -R "${atlas_user}:${atlas_group}" "${atlas_newdir}"
	fi
}

generate_key()
{
	ssh-keygen -t rsa -P '' -C "$(hostname -s)" -f "${atlas_newkey}"
	chown -R "${atlas_user}:${atlas_group}" "${atlas_newkey}"
	chown -R "${atlas_user}:${atlas_group}" "${atlas_newkey}.pub"
}

display_reginfo()
{
	echo "Installation complete! Your probe's public key is:"
	cat "${atlas_newkey}.pub"
	echo "Use this key to register your probe at:"
	echo "https://atlas.ripe.net/apply/swprobe/"
	echo "After this step, you can use:"
	echo "systemctl enable --now ${service_name}"
	echo "to start the RIPE Atlas service."
}

case "${1}" in
	configure)
		ensure_newdir_is_present

		if (! [ -f "${atlas_newkey}" ]); then
			generate_key
			display_reginfo
		fi
		# Ensure interface traffic counters are
		# enabled by default for anchors

		if [ ! -f "${atlas_newconfig}" ]; then
			touch -m 644 "${atlas_newconfig}"
			echo "RXTXRPT=yes" >> "${atlas_newconfig}"
			chown -R "${atlas_user}":"${atlas_group}" \
				 "${atlas_newconfig}"
		fi

		if get_state "is-enabled"; then
			systemctl enable "${service_name}" 1>/dev/null 2>&1
		fi

		if get_state "is-active"; then
			systemctl start "${service_name}" 1>/dev/null 2>&1
		fi

		clear_state
		;;

	abort-upgrade|abort-remove|abort-deconfigure)
		;;

	*)
		echo "postinst called with unknown argument '$1'" >&2
		exit 1
		;;
esac

exit 0
