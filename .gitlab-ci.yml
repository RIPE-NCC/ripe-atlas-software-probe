stages:
  - docker_image
  - build
  - lint
  - prepare
  - deploy

variables:
  DOCKER_IMAGE_DEBIAN11: ${CI_REGISTRY_IMAGE}/deb11:${CI_COMMIT_REF_SLUG}
  DOCKER_IMAGE_DEBIAN12: ${CI_REGISTRY_IMAGE}/deb12:${CI_COMMIT_REF_SLUG}
  DOCKER_IMAGE_OL8: ${CI_REGISTRY_IMAGE}/ol8:${CI_COMMIT_REF_SLUG}
  DOCKER_IMAGE_OL9: ${CI_REGISTRY_IMAGE}/ol9:${CI_COMMIT_REF_SLUG}
  DOCKER_IMAGE_PREP: ${CI_REGISTRY_IMAGE}/prep:${CI_COMMIT_REF_SLUG}
  GIT_SUBMODULE_STRATEGY: recursive
  RPMS_DIR: rpmbuild/RPMS

build_image:
  stage: docker_image
  only:
    - branches
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    DOCKER_IMAGE: ${CI_REGISTRY_IMAGE}/${OS}:${CI_COMMIT_REF_SLUG}
  script:
    - /kaniko/executor
      --registry-mirror "${DOCKER_REGISTRY_MIRROR}"
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/.gitlab-docker/${OS}-Dockerfile"
      --destination "${DOCKER_IMAGE}"
  parallel:
    matrix:
      - OS:
          - deb11
          - deb12
          - ol8
          - ol9
          - prep

.build-ci-debian:
  stage: build
  only:
    - /^devel.*/
    - /^testing$/
    - /^master$/
  script:
    - export HOME="${PWD}"
    - mkdir -p ${HOME}/${OS_VERSION}/main/binary-amd64   # create a repo with same structure as prod
    - dpkg-buildpackage -b -us -uc
    - pushd .repo
    - dpkg-buildpackage -b -us -uc
    - popd
    - mv {..,.}/ripe-atlas-*.deb ${HOME}/${OS_VERSION}/main/binary-amd64
    - mv VERSION ${HOME}/${OS_VERSION}
  artifacts:
    name: "${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}"
    paths:
      - ./${OS_VERSION}
    expire_in: never

build-ci-debian11:
  variables:
    OS_VERSION: bullseye
  extends: .build-ci-debian
  image: ${DOCKER_IMAGE_DEBIAN11}

build-ci-debian12:
  variables:
    OS_VERSION: bookworm
  extends: .build-ci-debian
  image: ${DOCKER_IMAGE_DEBIAN12}

.build-ci-rhel:
  stage: build
  only:
    - /^devel.*/
    - /^testing$/
    - /^master$/
  variables:
    REPO_RPM_PATH: ${RPMS_DIR}/noarch/*.rpm
    X86_RPM_PATH: ${RPMS_DIR}/x86_64/*.rpm
    REPO_GIT_SOURCE: https://${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD}@${URL}
  script:
    # build define list
    - REPO_GIT_TAG=""
    - export REPO_GIT_TAG="${CI_COMMIT_TAG:-${CI_COMMIT_BRANCH}}"
    - export HOME="${PWD}"
    - mkdir -p ${HOME}/${OS_VERSION}/{noarch,x86_64}   # create a repo with same structure as prod

    # build repo rpm
    - pushd .repo
    - rpmbuild -bb --define "git_source ${REPO_GIT_SOURCE}" --define "git_tag ${REPO_GIT_TAG}" rhel/ripe-atlas-repo.spec
    - popd
    - cp -a ${HOME}/${REPO_RPM_PATH} ${HOME}/${OS_VERSION}/noarch

    # build x86_64 rpm
    - rpmbuild -bb --define "git_source ${REPO_GIT_SOURCE}" --define "git_tag ${REPO_GIT_TAG}" rhel/ripe-atlas-probe.spec
    - cp -a ${HOME}/${REPO_RPM_PATH} ${HOME}/${OS_VERSION}/noarch
    - cp -a ${HOME}/${X86_RPM_PATH} ${HOME}/${OS_VERSION}/x86_64
    - cp ${HOME}/rpmbuild/BUILD/ripe-atlas-software-probe/VERSION ${HOME}/${OS_VERSION}

    # build anchor rpm
    - rpmbuild -bb --define "git_source ${REPO_GIT_SOURCE}" --define "git_tag ${REPO_GIT_TAG}" rhel/ripe-atlas-anchor.spec
    - cp -a ${HOME}/${REPO_RPM_PATH} ${HOME}/${OS_VERSION}/noarch

  artifacts:
    name: "${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}"
    paths:
      - ./${OS_VERSION}
    expire_in: never

build-ci-el8:
  variables:
    OS_VERSION: el8
  image: ${DOCKER_IMAGE_OL8}
  extends: .build-ci-rhel

build-ci-el9:
  variables:
    OS_VERSION: el9
  image: ${DOCKER_IMAGE_OL9}
  extends: .build-ci-rhel

.lint-ci-rhel:
  stage: lint
  only:
    - /^devel.*/
    - /^testing$/
    - /^master$/
  script:
    - mkdir lint_report
    - for RPM in $(find ${OS_VERSION} -type f); do rpmlint $RPM > lint_report/$(echo $RPM | sed -n "s/^.*\/\s*\(\S*\)-.*$/\1.log/p") ; done || true
  artifacts:
    name: "${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}-lint-report"
    paths:
      - ./lint_report
    expire_in: never  

lint-ci-el8:
  needs:
    - job: build-ci-el8
      artifacts: true 
  variables:
    OS_VERSION: el8
  image: ${DOCKER_IMAGE_OL8}
  extends: .lint-ci-rhel

lint-ci-el9:
  needs:
    - job: build-ci-el9
      artifacts: true 
  variables:
    OS_VERSION: el9
  image: ${DOCKER_IMAGE_OL9}
  extends: .lint-ci-rhel

.prepare-ci:
  stage: prepare
  script:
    - 'eval ${PREPARE}'
    - cp -a ${OS_VERSION} ${OS_VERSION}-deployable
  image: ${DOCKER_IMAGE_PREP}
  artifacts:
    name: "${OS_VERSION}-deployable"
    paths:
      - ./${OS_VERSION}-deployable
    expire_in: never

.prepare-ci-rhel:
  variables:
    OS_DISTRIBUTION: rhel
  extends: .prepare-ci

.prepare-ci-debian:
  variables:
    OS_DISTRIBUTION: debian
  extends: .prepare-ci

.prepare-ci-el8:
  stage: prepare
  needs:
    - job: build-ci-el8
      artifacts: true
  variables:
    OS_VERSION: el8
  extends: .prepare-ci-rhel

.prepare-ci-el9:
  stage: prepare
  needs:
    - job: build-ci-el9
      artifacts: true
  variables:
    OS_VERSION: el9
  extends: .prepare-ci-rhel

.prepare-ci-debian11:
  stage: prepare
  needs:
    - job: build-ci-debian11
      artifacts: true
  variables:
    OS_VERSION: bullseye
  extends: .prepare-ci-debian

.prepare-ci-debian12:
  stage: prepare
  needs:
    - job: build-ci-debian12
      artifacts: true
  variables:
    OS_VERSION: bookworm
  extends: .prepare-ci-debian

prepare-ci-el8-devel:
    stage: prepare
    only:
      - /^devel.*/
    extends: .prepare-ci-el8
    environment:
      name: devel

prepare-ci-el9-devel:
    stage: prepare
    only:
      - /^devel.*/
    extends: .prepare-ci-el9
    environment:
      name: devel

prepare-ci-debian11-devel:
    stage: prepare
    only:
      - /^devel.*/
    extends: .prepare-ci-debian11
    environment:
      name: devel

prepare-ci-debian12-devel:
    stage: prepare
    only:
      - /^devel.*/
    extends: .prepare-ci-debian12
    environment:
      name: devel

prepare-ci-el8-testing:
    stage: prepare
    only:
      - /^testing$/
    extends: .prepare-ci-el8
    environment:
      name: testing

prepare-ci-el9-testing:
    stage: prepare
    only:
      - /^testing$/
    extends: .prepare-ci-el9
    environment:
      name: testing

prepare-ci-debian11-testing:
    stage: prepare
    only:
      - /^testing$/
    extends: .prepare-ci-debian11
    environment:
      name: testing

prepare-ci-debian12-testing:
    stage: prepare
    only:
      - /^testing$/
    extends: .prepare-ci-debian12
    environment:
      name: testing

prepare-ci-el8-master:
    stage: prepare
    only:
      - /^master$/
    extends: .prepare-ci-el8
    environment:
      name: master

prepare-ci-el9-master:
    stage: prepare
    only:
      - /^master$/
    extends: .prepare-ci-el9
    environment:
      name: master

prepare-ci-debian11-master:
    stage: prepare
    only:
      - /^master$/
    extends: .prepare-ci-debian11
    environment:
      name: master

prepare-ci-debian12-master:
    stage: prepare
    only:
      - /^master$/
    extends: .prepare-ci-debian12
    environment:
      name: master

approve-ci:
  stage: deploy
  only:
    - /^devel.*/
    - /^testing$/
    - /^master$/
  script: ':'
  when: manual

.deploy-ci:
  variables:
    REPO_GIT_SOURCE: https://${DEPLOY_USER}:${DEPLOY_TOKEN}@${URL}
  image: ${DOCKER_IMAGE_PREP}
  script:
    - 'eval ${DEPLOY}'

.deploy-ci-rhel:
  variables:
    OS_DISTRIBUTION: rhel
    TARGET: ${OS_DISTRIBUTION}/${OS_VERSION}
  extends: .deploy-ci

.deploy-ci-debian:
  variables:
    OS_DISTRIBUTION: debian
    TARGET: ${OS_DISTRIBUTION}/dists/${OS_VERSION}
  extends: .deploy-ci

.deploy-ci-el8:
  stage: deploy
  variables:
    OS_VERSION: el8
  image: ${DOCKER_IMAGE_PREP}
  extends: .deploy-ci-rhel
  resource_group: deploy

.deploy-ci-el9:
  stage: deploy
  variables:
    OS_VERSION: el9
  image: ${DOCKER_IMAGE_PREP}
  extends: .deploy-ci-rhel
  resource_group: deploy

.deploy-ci-debian11:
  stage: deploy
  variables:
    OS_VERSION: bullseye
  extends: .deploy-ci-debian
  resource_group: deploy

.deploy-ci-debian12:
  stage: deploy
  variables:
    OS_VERSION: bookworm
  extends: .deploy-ci-debian
  resource_group: deploy

deploy-ci-el8-devel:
    needs:
        - job: prepare-ci-el8-devel
          artifacts: true
        - job: approve-ci
    only:
      - /^devel.*/
    extends: .deploy-ci-el8
    environment:
      name: devel

deploy-ci-el9-devel:
    needs:
        - job: prepare-ci-el9-devel
          artifacts: true
        - job: approve-ci
    only:
      - /^devel.*/
    extends: .deploy-ci-el9
    environment:
      name: devel

deploy-ci-debian11-devel:
    needs:
        - job: prepare-ci-debian11-devel
          artifacts: true
        - job: approve-ci
    only:
      - /^devel.*/
    extends: .deploy-ci-debian11
    environment:
      name: devel

deploy-ci-debian12-devel:
    needs:
        - job: prepare-ci-debian12-devel
          artifacts: true
        - job: approve-ci
    only:
      - /^devel.*/
    extends: .deploy-ci-debian12
    environment:
      name: devel

deploy-ci-el8-testing:
    needs:
        - job: prepare-ci-el8-testing
          artifacts: true
        - job: approve-ci
    only:
      - /^testing$/
    extends: .deploy-ci-el8
    environment:
      name: testing

deploy-ci-el9-testing:
    needs:
        - job: prepare-ci-el9-testing
          artifacts: true
        - job: approve-ci
    only:
      - /^testing$/
    extends: .deploy-ci-el9
    environment:
      name: testing

deploy-ci-debian11-testing:
    needs:
        - job: prepare-ci-debian11-testing
          artifacts: true
        - job: approve-ci
    only:
      - /^testing$/
    extends: .deploy-ci-debian11
    environment:
      name: testing

deploy-ci-debian12-testing:
    needs:
        - job: prepare-ci-debian12-testing
          artifacts: true
        - job: approve-ci
    only:
      - /^testing$/
    extends: .deploy-ci-debian12
    environment:
      name: testing

deploy-ci-el8-master:
    needs:
        - job: prepare-ci-el8-master
          artifacts: true
        - job: approve-ci
    only:
      - /^master$/
    extends: .deploy-ci-el8
    environment:
      name: master

deploy-ci-el9-master:
    needs:
        - job: prepare-ci-el9-master
          artifacts: true
        - job: approve-ci
    only:
      - /^master$/
    extends: .deploy-ci-el9
    environment:
      name: master

deploy-ci-debian11-master:
    needs:
        - job: prepare-ci-debian11-master
          artifacts: true
        - job: approve-ci
    only:
      - /^master$/
    extends: .deploy-ci-debian11
    environment:
      name: master

deploy-ci-debian12-master:
    needs:
        - job: prepare-ci-debian12-master
          artifacts: true
        - job: approve-ci
    only:
      - /^master$/
    extends: .deploy-ci-debian12
    environment:
      name: master
